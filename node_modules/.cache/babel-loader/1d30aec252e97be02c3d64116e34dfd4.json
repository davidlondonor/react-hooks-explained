{"ast":null,"code":"var _jsxFileName = \"/Users/davidlondono/Documents/react-hooks-explained/src/components/Characters.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => setCharacter(data.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"characters\",\n      children: character.map(character => /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"characters\",\n      children: character.map(character => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Characters, \"y+oqPx3TvSl7pWAHUkjcnDIqOCo=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/davidlondono/Documents/react-hooks-explained/src/components/Characters.jsx"],"names":["React","useState","useEffect","Characters","character","setCharacter","fetch","then","response","json","data","results","map","name","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAACC,OAAN,CAF3B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACI;AAAA,4BACD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKP,SAAS,CAACQ,GAAV,CAAcR,SAAS,iBACtB;AAAA,kBAAKA,SAAS,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADL;AAAA;AAAA;AAAA;AAAA,YADC,eAMC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACCT,SAAS,CAACQ,GAAV,CAAcR,SAAS,iBACtB;AAAA,kBAAIA,SAAS,CAACU;AAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YAND;AAAA,kBADJ;AAcH,CAvBD;;GAAMX,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect} from \"react\"\n\nconst Characters = () => {\n\n    const [character, setCharacter] = useState([])\n\n    useEffect(() => {\n        fetch('https://rickandmortyapi.com/api/character')\n        .then(response => response.json())\n        .then( data => setCharacter(data.results))\n    }, [])\n    return (\n        <>\n       <div className=\"characters\">\n           {character.map(character => (\n             <h2>{character.name}</h2>\n           ))}\n       </div>\n         <div className=\"characters\">\n         {character.map(character => (\n           <p>{character.status}</p>\n         ))}\n     </div>\n     </>\n    )\n}\n\nexport default Characters"]},"metadata":{},"sourceType":"module"}